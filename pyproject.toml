[project]
name = 'roman_datamodels'
description = 'data models supporting calibration of the Nancy Grace Roman Space Telescope'
readme = 'README.md'
requires-python = '>=3.9'
license = { file = 'LICENSE' }
authors = [{ name = 'STScI', email = 'help@stsci.edu' }]
classifiers = [
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Astronomy',
    'License :: OSI Approved :: BSD License',
    'Programming Language :: Python :: 3',
]
dependencies = [
    'asdf >=2.15.0',
    'asdf-astropy >=0.4.0',
    'gwcs >=0.18.1',
    'psutil >=5.7.2',
    'numpy >=1.20',
    'astropy >=5.0.4',
    # 'rad >=0.15.0',
    'rad @ git+https://github.com/spacetelescope/rad.git@main',
    'asdf-standard >=1.0.3',
]
dynamic = ['version']

[project.optional-dependencies]
test = [
    'pytest >=6.0.0',
    'pytest-doctestplus',
    'pytest-doctestplus >=0.10.0',
    'pytest-env >= 0.8'
]
aws = [
    'stsci-aws-utils >= 0.1.2',
]
docs = [
    'sphinx',
    'sphinx-automodapi',
    'sphinx-rtd-theme',
    'stsci-rtd-theme',
    'sphinx-astropy',
    'sphinx-asdf',
    'tomli; python_version <"3.11"',
]

[project.urls]
'issues' = 'https://github.com/spacetelescope/roman_datamodels/issues'
'repository' = 'https://github.com/spacetelescope/roman_datamodels'

[project.entry-points]
'asdf.extensions' = { roman_datamodels = 'roman_datamodels.stnode._integration:get_extensions' }

[build-system]
requires = ["setuptools >=61", "setuptools_scm[toml] >=3.4"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/roman_datamodels/_version.py"

[tool.setuptools.packages.find]
where = ['src']

[tool.pytest.ini_options]
minversion = 6
doctest_plus = true
doctest_rst = true
text_file_format = 'rst'
log_cli_level = 'info'
xfail_strict = true
addopts = '--color=yes --doctest-rst --strict-config --strict-markers -ra'
testpaths = ['tests']
filterwarnings = [
    "error",
    "ignore:numpy.ndarray size changed:RuntimeWarning",
]
env = [
    "ROMAN_VALIDATE=true",
    "ROMAN_STRICT_VALIDATION=true",
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',
    # Don't complain about packages we have installed
    'except ImportError',
    # Don't complain if tests don't hit assertions
    'raise AssertionError',
    'raise NotImplementedError',
    # Don't complain about script hooks
    'def main\(.*\):',
    'if __name__ == \(.*\):',
    # Don't complain if non-runnable code isn't run
    'pass\n',
]

[tool.black]
line-length = 130
force-exclude = '''
^/(
  (
      \.eggs
    | \.git
    | \.pytest_cache
    | \.tox
  )/
)
'''

[tool.ruff]
line-length = 130
src = ["src", "tests", "docs"]
select = ["E", "F", "B", "I"]

[tool.codespell]
skip="*.pdf,*.fits,*.asdf,.tox,build,./tags,.git,docs/_build"
# ignore-words-list="""
# """
